Outputs:
  SolutionUrl:
    Description: Do not change the value of SolutionUrl it is populated elsewhere
    Value: [SOLUTION_SUB_DOMAIN].theorigin.ai
Resources:
  Site:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-site
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
  SiteCdn:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: SiteCDNOrigin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
        Origins:
          - DomainName: !Sub ${Site}.s3-website.${AWS::Region}.amazonaws.com
            Id: SiteCDNOrigin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Aliases:
          - [SOLUTION_SUB_DOMAIN].theorigin.ai
        ViewerCertificate:
          AcmCertificateArn: "arn:aws:acm:us-east-1:360520317360:certificate/b23c0b4f-7565-487f-8162-758df988aede"
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1
  LandingPageRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z0774359MJ4TNSWB6K7M
      RecordSets:
        - Name: [SOLUTION_SUB_DOMAIN].theorigin.ai
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt
              - SiteCdn
              - DomainName
  CdnBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Site
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub
              - ${BucketArn}/*
              - BucketArn: !GetAtt Site.Arn
